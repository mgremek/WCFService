//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kliencik.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IProdukty")]
    public interface IProdukty {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdukty/GetProdukty", ReplyAction="http://tempuri.org/IProdukty/GetProduktyResponse")]
        ProduktyService.Products_TEST[] GetProdukty();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdukty/GetProdukty", ReplyAction="http://tempuri.org/IProdukty/GetProduktyResponse")]
        System.Threading.Tasks.Task<ProduktyService.Products_TEST[]> GetProduktyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdukty/GetManufacturers", ReplyAction="http://tempuri.org/IProdukty/GetManufacturersResponse")]
        ProduktyService.Manufacturers[] GetManufacturers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdukty/GetManufacturers", ReplyAction="http://tempuri.org/IProdukty/GetManufacturersResponse")]
        System.Threading.Tasks.Task<ProduktyService.Manufacturers[]> GetManufacturersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdukty/GetSubcategory", ReplyAction="http://tempuri.org/IProdukty/GetSubcategoryResponse")]
        ProduktyService.SubCategory[] GetSubcategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProdukty/GetSubcategory", ReplyAction="http://tempuri.org/IProdukty/GetSubcategoryResponse")]
        System.Threading.Tasks.Task<ProduktyService.SubCategory[]> GetSubcategoryAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProduktyChannel : Kliencik.ServiceReference1.IProdukty, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProduktyClient : System.ServiceModel.ClientBase<Kliencik.ServiceReference1.IProdukty>, Kliencik.ServiceReference1.IProdukty {
        
        public ProduktyClient() {
        }
        
        public ProduktyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProduktyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProduktyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProduktyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ProduktyService.Products_TEST[] GetProdukty() {
            return base.Channel.GetProdukty();
        }
        
        public System.Threading.Tasks.Task<ProduktyService.Products_TEST[]> GetProduktyAsync() {
            return base.Channel.GetProduktyAsync();
        }
        
        public ProduktyService.Manufacturers[] GetManufacturers() {
            return base.Channel.GetManufacturers();
        }
        
        public System.Threading.Tasks.Task<ProduktyService.Manufacturers[]> GetManufacturersAsync() {
            return base.Channel.GetManufacturersAsync();
        }
        
        public ProduktyService.SubCategory[] GetSubcategory() {
            return base.Channel.GetSubcategory();
        }
        
        public System.Threading.Tasks.Task<ProduktyService.SubCategory[]> GetSubcategoryAsync() {
            return base.Channel.GetSubcategoryAsync();
        }
    }
}
